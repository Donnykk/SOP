package com.ctsi.ssdc.project.domain;

import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.criteria.ZonedDateTimeCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import org.apache.commons.lang3.StringUtils;

import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * SrGradeInfoExample
 *
 * @author hx
 * @date 2023-06-09 10:18:29
 */

public class SrGradeInfoExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private static final String LIKE_FORMAT = "%%%s%%";


        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.id
         *
         * @date 2023-06-09 10:18:29
         */
    private LongCriteria id;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.name
         *
         * @date 2023-06-09 10:18:29
         */
    private StringCriteria name;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.school
         *
         * @date 2023-06-09 10:18:29
         */
    private StringCriteria school;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.remark
         *
         * @date 2023-06-09 10:18:29
         */
    private StringCriteria remark;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.create_by
         *
         * @date 2023-06-09 10:18:29
         */
    private StringCriteria createBy;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.create_time
         *
         * @date 2023-06-09 10:18:29
         */
    private ZonedDateTimeCriteria createTime;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.update_by
         *
         * @date 2023-06-09 10:18:29
         */
    private StringCriteria updateBy;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sr_grade_info.update_time
         *
         * @date 2023-06-09 10:18:29
         */
    private ZonedDateTimeCriteria updateTime;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public SrGradeInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public LongCriteria getId() {
        return id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setId(LongCriteria id) {
        this. id = id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildIdCriteria(Criteria criteria) {
        if (this.getId() == null) {
            return;
        }
        if (this.getId().getEquals() != null) {
            criteria.andIdEqualTo(this.getId().getEquals());
        } else {
            if (this.getId().getGreaterOrEqualThan() != null) {
                criteria.andIdGreaterThanOrEqualTo(this.getId().getGreaterOrEqualThan());
            }
            if (this.getId().getLessOrEqualThan() != null) {
                criteria.andIdLessThanOrEqualTo(this.getId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public StringCriteria getName() {
        return name;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setName(StringCriteria name) {
        this. name = name;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildNameCriteria(Criteria criteria) {
        if (this.getName() == null) {
            return;
        }
        if (this.getName().getEquals() != null) {
            criteria.andNameEqualTo(this.getName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getName().getContains())) {
                criteria.andNameLike(String.format(LIKE_FORMAT, this.getName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public StringCriteria getSchool() {
        return school;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setSchool(StringCriteria school) {
        this. school = school;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildSchoolCriteria(Criteria criteria) {
        if (this.getSchool() == null) {
            return;
        }
        if (this.getSchool().getEquals() != null) {
            criteria.andSchoolEqualTo(this.getSchool().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getSchool().getContains())) {
                criteria.andSchoolLike(String.format(LIKE_FORMAT, this.getSchool().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public StringCriteria getRemark() {
        return remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setRemark(StringCriteria remark) {
        this. remark = remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildRemarkCriteria(Criteria criteria) {
        if (this.getRemark() == null) {
            return;
        }
        if (this.getRemark().getEquals() != null) {
            criteria.andRemarkEqualTo(this.getRemark().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getRemark().getContains())) {
                criteria.andRemarkLike(String.format(LIKE_FORMAT, this.getRemark().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public StringCriteria getCreateBy() {
        return createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setCreateBy(StringCriteria createBy) {
        this. createBy = createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildCreateByCriteria(Criteria criteria) {
        if (this.getCreateBy() == null) {
            return;
        }
        if (this.getCreateBy().getEquals() != null) {
            criteria.andCreateByEqualTo(this.getCreateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCreateBy().getContains())) {
                criteria.andCreateByLike(String.format(LIKE_FORMAT, this.getCreateBy().getContains()));
            }

        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public ZonedDateTimeCriteria getCreateTime() {
        return createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setCreateTime(ZonedDateTimeCriteria createTime) {
        this. createTime = createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildCreateTimeCriteria(Criteria criteria) {
        if (this.getCreateTime() == null) {
            return;
        }
        if (this.getCreateTime().getEquals() != null) {
            criteria.andCreateTimeEqualTo(this.getCreateTime().getEquals());
        } else {
            if (this.getCreateTime().getGreaterOrEqualThan() != null) {
                criteria.andCreateTimeGreaterThanOrEqualTo(this.getCreateTime().getGreaterOrEqualThan());
            }
            if (this.getCreateTime().getLessOrEqualThan() != null) {
                criteria.andCreateTimeLessThanOrEqualTo(this.getCreateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public StringCriteria getUpdateBy() {
        return updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setUpdateBy(StringCriteria updateBy) {
        this. updateBy = updateBy;
    }

//    /**
//     * This method was generated by  Generator.
//     * This method corresponds to the database table sr_grade_info
//     *
//     * @date 2023-06-09 10:18:29
//     */
//    private void buildUpdateByCriteria(Criteria criteria) {
//        if (this.getUpdateBy() == null) {
//            return;
//        }
//        if (this.getUpdateBy().getEquals() != null) {
//            criteria.andUpdateByEqualTo(this.getUpdateBy().getEquals());
//        } else {
//            if (this.getUpdateBy().getGreaterOrEqualThan() != null) {
//                criteria.andUpdateByGreaterThanOrEqualTo(this.getUpdateBy().getGreaterOrEqualThan());
//            }
//            if (this.getUpdateBy().getLessOrEqualThan() != null) {
//                criteria.andUpdateByLessThanOrEqualTo(this.getUpdateBy().getLessOrEqualThan());
//            }
//        }
//    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }
    /**
      * This method was generated by  Generator.
      * This method corresponds to the database table cscp_hx_form_column
      *
      * @date Thu Feb 17 14:02:06 CST 2022
      */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildIdCriteria(criteria);
        this.buildNameCriteria(criteria);
        this.buildSchoolCriteria(criteria);
        this.buildRemarkCriteria(criteria);
        this.buildCreateByCriteria(criteria);
        this.buildCreateTimeCriteria(criteria);
//        this.buildUpdateByCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSchoolIsNull() {
            addCriterion("school is null");
            return (Criteria) this;
        }

        public Criteria andSchoolIsNotNull() {
            addCriterion("school is not null");
            return (Criteria) this;
        }

        public Criteria andSchoolEqualTo(String value) {
            addCriterion("school =", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotEqualTo(String value) {
            addCriterion("school <>", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolGreaterThan(String value) {
            addCriterion("school >", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolGreaterThanOrEqualTo(String value) {
            addCriterion("school >=", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolLessThan(String value) {
            addCriterion("school <", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolLessThanOrEqualTo(String value) {
            addCriterion("school <=", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolLike(String value) {
            addCriterion("school like", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotLike(String value) {
            addCriterion("school not like", value, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolIn(List<String> values) {
            addCriterion("school in", values, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotIn(List<String> values) {
            addCriterion("school not in", values, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolBetween(String value1, String value2) {
            addCriterion("school between", value1, value2, "school");
            return (Criteria) this;
        }

        public Criteria andSchoolNotBetween(String value1, String value2) {
            addCriterion("school not between", value1, value2, "school");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("create_by like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(Long value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(Long value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(Long value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(Long value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(Long value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(Long value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<Long> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<Long> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(Long value1, Long value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(Long value1, Long value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(ZonedDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(ZonedDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<ZonedDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(Long value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(Long value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(Long value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(Long value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(Long value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(Long value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<Long> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<Long> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(Long value1, Long value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(Long value1, Long value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  sr_grade_info
     *
     * @date do_not_delete_during_merge 2023-06-09 10:18:29
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  sr_grade_info
     *
     * @date 2023-06-09 10:18:29
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
